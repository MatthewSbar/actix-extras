searchState.loadedDescShard("actix_web_httpauth", 0, "HTTP authentication schemes for Actix Web.\nType-safe authentication information extractors.\nTyped HTTP headers.\nHTTP Authentication middleware.\nTrait implemented for types that provides configuration …\nAuthentication error returned by authentication extractors.\nAssociated challenge type.\nExtractor for the “Basic” HTTP Authentication Scheme.\nExtractor for the “Bearer” HTTP Authentication Scheme.\nReturns mutable reference to the inner challenge instance.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConvert the config instance into a HTTP challenge.\nCreates new authentication error from the provided …\nReturns mutable reference to the inner status code.\nAttach <code>Error</code> to the current Authentication error.\nAttach error description to the current Authentication …\nAttach error URI to the current Authentication error.\nExtractor for HTTP Basic auth.\n<code>BasicAuth</code> extractor configuration used for <code>WWW-Authenticate</code>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns client’s password.\nSet challenge <code>realm</code> attribute.\nReturns client’s user-ID.\nExtractor for HTTP Bearer auth\n<code>BearerAuth</code> extractor configuration.\nBearer authorization error types, described in RFC 6750.\nThe request requires higher privileges than provided by …\nThe request is missing a required parameter, includes an …\nThe access token provided is expired, revoked, malformed, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSet challenge <code>realm</code> attribute.\nSet challenge <code>scope</code> attribute.\nReturns HTTP status code suitable for current error type.\nReturns bearer token provided by client.\n<code>Authorization</code> header and various auth schemes.\n<code>WWW-Authenticate</code> header and various auth challenges.\n<code>Authorization</code> header, defined in RFC 7235\nMalformed base64 string.\nCredentials for <code>Basic</code> authentication scheme, defined in …\nCredentials for <code>Bearer</code> authentication scheme, defined in …\nHeader value is malformed.\nRequired authentication field is missing.\nAuthentication scheme is missing.\nPossible errors while parsing <code>Authorization</code> header.\nAuthentication scheme for <code>Authorization</code> header.\nUnable to convert header into the str.\nMalformed UTF-8 string.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes <code>Authorization</code> header and returns inner <code>Scheme</code> …\nCreates <code>Basic</code> credentials with provided <code>user_id</code> and …\nCreates new <code>Bearer</code> credentials with the token provided.\nTry to parse an authentication scheme from the …\nReturns client’s password if provided.\nGets reference to the credentials token.\nReturns client’s user-ID.\nAuthentication challenge for <code>WWW-Authenticate</code> header.\n<code>WWW-Authenticate</code> header, described in RFC 7235.\nChallenge for the “Basic” HTTP Authentication Scheme.\nChallenge for the “Bearer” HTTP Authentication Scheme.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConverts the challenge into a bytes suitable for HTTP …\nChallenge for <code>WWW-Authenticate</code> header with HTTP Basic auth …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates new <code>Basic</code> challenge with an empty <code>realm</code> field.\nCreates new <code>Basic</code> challenge from the provided <code>realm</code> field …\nChallenge for <code>WWW-Authenticate</code> header with HTTP Bearer …\nBuilder for the <code>Bearer</code> challenge.\nBearer authorization error types, described in RFC 6750.\nThe request requires higher privileges than provided by …\nThe request is missing a required parameter, includes an …\nThe access token provided is expired, revoked, malformed, …\nCreates the builder for <code>Bearer</code> challenge.\nProvides the <code>error</code> attribute, as defined in [RFC 6750, …\nProvides the <code>error_description</code> attribute, as defined in […\nProvides the <code>error_uri</code> attribute, as defined in [RFC 6750 …\nConsumes the builder and returns built <code>Bearer</code> instance.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProvides the <code>realm</code> attribute, as defined in RFC 2617.\nProvides the <code>scope</code> attribute, as defined in RFC 6749 §3.3.\nMiddleware for checking HTTP authentication.\nConstruct <code>HttpAuthentication</code> middleware for the HTTP “…\nConstruct <code>HttpAuthentication</code> middleware for the HTTP “…\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConstruct <code>HttpAuthentication</code> middleware with the provided …")